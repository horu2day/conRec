services:
  # MongoDB 서비스
  mongodb:
    image: mongo:7.0
    container_name: conrec-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: conrec_admin_password
      MONGO_INITDB_DATABASE: conrec
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - conrec-network

  # Backend 서비스
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: conrec-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:conrec_admin_password@mongodb:27017/conrec?authSource=admin
      JWT_SECRET: ZFveLtnUfSMH1aw1eRxpUJQls45CxO0QebupSGBwfd0=
      JWT_EXPIRES_IN: 24h
      CORS_ORIGIN: ${FRONTEND_URL:-https://meeting.hmac.kr}
    # ports: # 포트는 Nginx를 통해서만 접근하므로 직접 노출하지 않음
    #   - "3017:3000"
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - conrec-network

  # Frontend 서비스 (Nginx 포함)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${API_URL:-/api} # Nginx 프록시를 사용하므로 상대 경로로 변경
        VITE_SOCKET_URL: ${SOCKET_URL:-/} # Nginx 프록시를 사용하므로 상대 경로로 변경
        VITE_MAX_PARTICIPANTS: 10
    container_name: conrec-frontend
    restart: unless-stopped
    ports:
      - "8017:80" # 외부 포트 8017과 컨테이너 80 포트 연결
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro # Nginx 설정 파일 마운트
      - ./uploads:/app/uploads
    depends_on:
      - backend
    networks:
      - conrec-network

volumes:
  mongodb_data:
    driver: local

networks:
  conrec-network:
    driver: bridge
